{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./src/components/MCDCInput.vue?64ca","webpack:///./node_modules/prismjs/components/prism-javascript.js","webpack:///./src/components/MCDCInput.vue?b349","webpack:///src/components/MCDCInput.vue","webpack:///./src/components/MCDCInput.vue?fbad","webpack:///./src/components/MCDCInput.vue?7659","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///./node_modules/prismjs/components/prism-clike.js","webpack:///./node_modules/vue-prism-editor/dist/prismeditor.esm.js"],"names":["fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","arrayPush","push","min","Math","MAX_UINT32","SUPPORTS_Y","RegExp","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","length","separator","limit","string","String","this","lim","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","slice","index","apply","test","O","splitter","regexp","res","done","value","rx","S","C","unicodeMatching","p","q","A","e","z","i","Prism","languages","javascript","extend","clike","pattern","lookbehind","insertBefore","greedy","alias","inside","rest","markup","tag","addInlined","js","render","_vm","_h","$createElement","_c","_self","staticClass","_v","attrs","highlighter","model","callback","$$v","code","expression","on","getResult","staticRenderFns","component","window","WorkerGlobalScope","self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","Array","isArray","map","replace","o","Object","prototype","toString","objId","obj","defineProperty","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","getLanguage","element","className","parentElement","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","querySelectorAll","highlightElement","language","parent","nodeName","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","add","name","callbacks","matchedStr","startNode","startPos","rematch","patterns","j","cause","patternObj","lookbehindLength","global","currentNode","next","pos","tail","reach","str","removeCount","prev","from","to","k","matchStr","after","removeFrom","removeRange","wrapped","list","node","newNode","count","array","s","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","requestAnimationFrame","setTimeout","module","exports","_extends","assign","target","arguments","KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","KEYCODE_ESCAPE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","navigator","platform","isMacLike","PrismEditor","props","lineNumbers","Boolean","autoStyleLineNumbers","readonly","Function","required","tabSize","Number","insertSpaces","ignoreTabKey","placeholder","capture","history","offset","lineNumbersHeight","codeData","watch","immediate","handler","newVal","_this","$nextTick","setLineNumbersHeight","_this2","styleLineNumbers","computed","isEmpty","result","lineNumbersCount","totalLines","mounted","_recordCurrentState","methods","getComputedStyle","$refs","pre","height","$editor","$lineNumbers","$el","querySelector","editorStyles","btlr","bblr","style","stylesList","input","textarea","selectionStart","selectionEnd","_recordChange","_getLines","position","substring","_applyEdits","record","last","_updateInput","overwrite","_this$history","extras","max","timestamp","Date","now","_this$_getLines$pop","_this$_getLines$pop2","re","previous","pop","current","startsWith","$emit","handleChange","_e$target","_undoEdit","_this$history2","_redoEdit","_this$history3","handleKeyDown","$listeners","keydown","defaultPrevented","keyCode","blur","_e$target2","tabCharacter","repeat","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","line","startLineText","_linesBeforeCaret","_startLine","_endLine","_startLineText","updatedSelection","hasSelection","textBeforeCaret","endsWith","_updatedSelection","matches","indent","_updatedSelection2","chars","metaKey","ctrlKey","altKey","h","_this3","lineNumberWidthCalculator","keys","ref","click","$event","keyup","focus","spellCheck","autocapitalize","autocomplete","autocorrect","domProps","preview","editorContainer"],"mappings":"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","file":"js/chunk-1d265b3a.b85e47bf.js","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MCDCInput.vue?vue&type=style&index=0&id=7c07f0dd&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MCDCInput.vue?vue&type=style&index=0&id=7c07f0dd&scoped=true&lang=css&\"","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('center',[_c('h3',[_vm._v(\"Elementary Comparison with MC/DC\")]),_c('h5',[_vm._v(\"Enter (Java like)pseudo code below!\")]),_c('prism-editor',{staticClass:\"my-editor height-300\",attrs:{\"highlight\":_vm.highlighter,\"line-numbers\":\"\"},model:{value:(_vm.code),callback:function ($$v) {_vm.code=$$v},expression:\"code\"}}),_c('br'),_c('button',{on:{\"click\":_vm.getResult}},[_vm._v(\"Get Result\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"main\">\n        <center>\n        <h3>Elementary Comparison with MC/DC</h3>\n        <h5>Enter (Java like)pseudo code below!</h5>\n\n          <prism-editor class=\"my-editor height-300\" v-model=\"code\" :highlight=\"highlighter\" line-numbers></prism-editor>\n          <br>\n          <button @click=\"getResult\">Get Result</button>\n\n        </center>\n    </div>\n</template>\n\n<style scoped>\n  /* required class */\n  .my-editor {\n    /* we dont use `language-` classes anymore so thats why we need to add background and text color manually */\n    background: #2d2d2d;\n    color: #ccc;\n \n    /* you must provide font-family font-size line-height. Example: */\n    font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\n    font-size: 14px;\n    line-height: 1.5;\n    padding: 5px;\n  }\n \n  /* optional class for removing the outline */\n  .prism-editor__textarea:focus {\n    outline: none;\n  }\n  .height-300 {\n   height: 300px;\n  }\n\n\n</style>\n\n\n\n\n<script>\n // import Prism Editor\n  import { PrismEditor } from 'vue-prism-editor';\n  import 'vue-prism-editor/dist/prismeditor.min.css'; // import the styles somewhere\n \n  // import highlighting library (you can use any library you want just return html string)\n  import { highlight, languages } from 'prismjs/components/prism-core';\n  import 'prismjs/components/prism-clike';\n  import 'prismjs/components/prism-javascript';\n  import 'prismjs/themes/prism-tomorrow.css'; // import syntax highlighting styles\n  import axios from 'axios';\n\n\n  var temp = \"/** Sample **/ \\n if ( a || b){ \\n    print a;\\n}\\nelse if ( c && d || e){\\n    print b;\\n}\"\n \n  export default {\n      components: {\n        PrismEditor,\n      },\n      data: () => ({ code: temp }),\n      methods: {\n\n        highlighter(code) {\n          return highlight(code, languages.js); //returns html\n        },\n        getResult(){\n            var router = this.$router \n            var url = window.location.origin;\n            var temp = url.replace(\":8080\", \"\");\n\n            axios({\n              method : 'post',\n              url : temp + ':5000/mcdcresult',\n              data : {\n                codes : this.code,\n              }\n            }).then(function(response){\n              var responseData\n              responseData = response.data.split(\":::\")\n              router.push({\n                name: 'mcdcresult',\n                params: {tabledata:responseData[0],\n                        xlsxfile:responseData[1]}\n              })\n            }).catch(function(error){\n              router.push({\n                name: 'errorpage',\n                params : {errormsg:error}\n              })\n            })\n        }\n      },\n\n  };\n\n</script>\n\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MCDCInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MCDCInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MCDCInput.vue?vue&type=template&id=7c07f0dd&scoped=true&\"\nimport script from \"./MCDCInput.vue?vue&type=script&lang=js&\"\nexport * from \"./MCDCInput.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MCDCInput.vue?vue&type=style&index=0&id=7c07f0dd&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7c07f0dd\",\n  null\n  \n)\n\nexport default component.exports","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will only be run by the current worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\tlookbehindLength = 0,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\n\t\t\t\tif (greedy && currentNode != tokenList.tail.prev) {\n\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str);\n\t\t\t\t}\n\n\t\t\t\tif (!match) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (lookbehind) {\n\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\tmatchStr = match[0].slice(lookbehindLength),\n\t\t\t\t\tto = from + matchStr.length,\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(to);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","import Vue from 'vue';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar KEYCODE_ESCAPE = 27;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = 'navigator' in global && /*#__PURE__*/ /Win/i.test(navigator.platform);\nvar isMacLike = 'navigator' in global && /*#__PURE__*/ /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar PrismEditor = /*#__PURE__*/Vue.extend({\n  props: {\n    lineNumbers: {\n      type: Boolean,\n      \"default\": false\n    },\n    autoStyleLineNumbers: {\n      type: Boolean,\n      \"default\": true\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    value: {\n      type: String,\n      \"default\": ''\n    },\n    highlight: {\n      type: Function,\n      required: true\n    },\n    tabSize: {\n      type: Number,\n      \"default\": 2\n    },\n    insertSpaces: {\n      type: Boolean,\n      \"default\": true\n    },\n    ignoreTabKey: {\n      type: Boolean,\n      \"default\": false\n    },\n    placeholder: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      capture: true,\n      history: {\n        stack: [],\n        offset: -1\n      },\n      lineNumbersHeight: '20px',\n      codeData: ''\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(newVal) {\n        if (!newVal) {\n          this.codeData = '';\n        } else {\n          this.codeData = newVal;\n        }\n      }\n    },\n    content: {\n      immediate: true,\n      handler: function handler() {\n        var _this = this;\n\n        if (this.lineNumbers) {\n          this.$nextTick(function () {\n            _this.setLineNumbersHeight();\n          });\n        }\n      }\n    },\n    lineNumbers: function lineNumbers() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.styleLineNumbers();\n\n        _this2.setLineNumbersHeight();\n      });\n    }\n  },\n  computed: {\n    isEmpty: function isEmpty() {\n      return this.codeData.length === 0;\n    },\n    content: function content() {\n      var result = this.highlight(this.codeData) + '<br />'; // todo: VNode support?\n\n      return result;\n    },\n    lineNumbersCount: function lineNumbersCount() {\n      var totalLines = this.codeData.split(/\\r\\n|\\n/).length;\n      return totalLines;\n    }\n  },\n  mounted: function mounted() {\n    this._recordCurrentState();\n\n    this.styleLineNumbers();\n  },\n  methods: {\n    setLineNumbersHeight: function setLineNumbersHeight() {\n      this.lineNumbersHeight = getComputedStyle(this.$refs.pre).height;\n    },\n    styleLineNumbers: function styleLineNumbers() {\n      if (!this.lineNumbers || !this.autoStyleLineNumbers) return;\n      var $editor = this.$refs.pre;\n      var $lineNumbers = this.$el.querySelector('.prism-editor__line-numbers');\n      var editorStyles = window.getComputedStyle($editor);\n      this.$nextTick(function () {\n        var btlr = 'border-top-left-radius';\n        var bblr = 'border-bottom-left-radius';\n        if (!$lineNumbers) return;\n        $lineNumbers.style[btlr] = editorStyles[btlr];\n        $lineNumbers.style[bblr] = editorStyles[bblr];\n        $editor.style[btlr] = '0';\n        $editor.style[bblr] = '0';\n        var stylesList = ['background-color', 'margin-top', 'padding-top', 'font-family', 'font-size', 'line-height'];\n        stylesList.forEach(function (style) {\n          $lineNumbers.style[style] = editorStyles[style];\n        });\n        $lineNumbers.style['margin-bottom'] = '-' + editorStyles['padding-top'];\n      });\n    },\n    _recordCurrentState: function _recordCurrentState() {\n      var input = this.$refs.textarea;\n      if (!input) return; // Save current state of the input\n\n      var value = input.value,\n          selectionStart = input.selectionStart,\n          selectionEnd = input.selectionEnd;\n\n      this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      });\n    },\n    _getLines: function _getLines(text, position) {\n      return text.substring(0, position).split('\\n');\n    },\n    _applyEdits: function _applyEdits(record) {\n      // Save last selection state\n      var input = this.$refs.textarea;\n      var last = this.history.stack[this.history.offset];\n\n      if (last && input) {\n        this.history.stack[this.history.offset] = _extends({}, last, {\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd\n        });\n      } // Save the changes\n\n\n      this._recordChange(record);\n\n      this._updateInput(record);\n    },\n    _recordChange: function _recordChange(record, overwrite) {\n      if (overwrite === void 0) {\n        overwrite = false;\n      }\n\n      var _this$history = this.history,\n          stack = _this$history.stack,\n          offset = _this$history.offset;\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        this.history.stack = stack.slice(0, offset + 1); // Limit the number of operations to 100\n\n        var count = this.history.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          var extras = count - HISTORY_LIMIT;\n          this.history.stack = stack.slice(extras, count);\n          this.history.offset = Math.max(this.history.offset - extras, 0);\n        }\n      }\n\n      var timestamp = Date.now();\n\n      if (overwrite) {\n        var last = this.history.stack[this.history.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          var _this$_getLines$pop, _this$_getLines$pop2;\n\n          // A previous entry exists and was in short interval\n          // Match the last word in the line\n          var re = /[^a-z0-9]([a-z0-9]+)$/i; // Get the previous line\n\n          var previous = (_this$_getLines$pop = this._getLines(last.value, last.selectionStart).pop()) === null || _this$_getLines$pop === void 0 ? void 0 : _this$_getLines$pop.match(re); // Get the current line\n\n          var current = (_this$_getLines$pop2 = this._getLines(record.value, record.selectionStart).pop()) === null || _this$_getLines$pop2 === void 0 ? void 0 : _this$_getLines$pop2.match(re);\n\n          if (previous && current && current[1].startsWith(previous[1])) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            this.history.stack[this.history.offset] = _extends({}, record, {\n              timestamp: timestamp\n            });\n            return;\n          }\n        }\n      } // Add the new operation to the stack\n\n\n      this.history.stack.push(_extends({}, record, {\n        timestamp: timestamp\n      }));\n      this.history.offset++;\n    },\n    _updateInput: function _updateInput(record) {\n      var input = this.$refs.textarea;\n      if (!input) return; // Update values and selection state\n\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n      this.$emit('input', record.value); // this.props.onValueChange(record.value);\n    },\n    handleChange: function handleChange(e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          selectionStart = _e$target.selectionStart,\n          selectionEnd = _e$target.selectionEnd;\n\n      this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, true);\n\n      this.$emit('input', value); // this.props.onValueChange(value);\n    },\n    _undoEdit: function _undoEdit() {\n      var _this$history2 = this.history,\n          stack = _this$history2.stack,\n          offset = _this$history2.offset; // Get the previous edit\n\n      var record = stack[offset - 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n\n        this.history.offset = Math.max(offset - 1, 0);\n      }\n    },\n    _redoEdit: function _redoEdit() {\n      var _this$history3 = this.history,\n          stack = _this$history3.stack,\n          offset = _this$history3.offset; // Get the next edit\n\n      var record = stack[offset + 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n\n        this.history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    },\n    handleKeyDown: function handleKeyDown(e) {\n      // console.log(navigator.platform);\n      var tabSize = this.tabSize,\n          insertSpaces = this.insertSpaces,\n          ignoreTabKey = this.ignoreTabKey;\n\n      if (this.$listeners.keydown) {\n        // onKeyDown(e);\n        this.$emit('keydown', e);\n\n        if (e.defaultPrevented) {\n          return;\n        }\n      }\n\n      if (e.keyCode === KEYCODE_ESCAPE) {\n        e.target.blur();\n        this.$emit('blur', e);\n      }\n\n      var _e$target2 = e.target,\n          value = _e$target2.value,\n          selectionStart = _e$target2.selectionStart,\n          selectionEnd = _e$target2.selectionEnd;\n      var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.capture) {\n        // Prevent focus change\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Unindent selected lines\n          var linesBeforeCaret = this._getLines(value, selectionStart);\n\n          var startLine = linesBeforeCaret.length - 1;\n          var endLine = this._getLines(value, selectionEnd).length - 1;\n          var nextValue = value.split('\\n').map(function (line, i) {\n            if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          }).join('\\n');\n\n          if (value !== nextValue) {\n            var startLineText = linesBeforeCaret[startLine];\n\n            this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: startLineText.startsWith(tabCharacter) ? selectionStart - tabCharacter.length : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length)\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          var _linesBeforeCaret = this._getLines(value, selectionStart);\n\n          var _startLine = _linesBeforeCaret.length - 1;\n\n          var _endLine = this._getLines(value, selectionEnd).length - 1;\n\n          var _startLineText = _linesBeforeCaret[_startLine];\n\n          this._applyEdits({\n            value: value.split('\\n').map(function (line, i) {\n              if (i >= _startLine && i <= _endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            }).join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: /\\S/.test(_startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (_endLine - _startLine + 1)\n          });\n        } else {\n          var updatedSelection = selectionStart + tabCharacter.length;\n\n          this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        var hasSelection = selectionStart !== selectionEnd;\n        var textBeforeCaret = value.substring(0, selectionStart);\n\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n\n          var _updatedSelection = selectionStart - tabCharacter.length;\n\n          this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: _updatedSelection,\n            selectionEnd: _updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          var line = this._getLines(value, selectionStart).pop();\n\n          var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n\n          if (matches && matches[0]) {\n            e.preventDefault(); // Preserve indentation on inserting a new line\n\n            var indent = '\\n' + matches[0];\n\n            var _updatedSelection2 = selectionStart + indent.length;\n\n            this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: _updatedSelection2,\n              selectionEnd: _updatedSelection2\n            });\n          }\n        }\n      } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n        var chars;\n\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        } // console.log(isMacLike, \"navigator\" in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n        // If text is selected, wrap them in the characters\n\n\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n\n          this._applyEdits({\n            value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd + 2\n          });\n        }\n      } else if ((isMacLike ? // Trigger undo with ⌘+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z : // Trigger undo with Ctrl+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n\n        this._undoEdit();\n      } else if ((isMacLike ? // Trigger redo with ⌘+Shift+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ? // Trigger redo with Ctrl+Y on Windows\n      e.ctrlKey && e.keyCode === KEYCODE_Y : // Trigger redo with Ctrl+Shift+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n        e.preventDefault();\n\n        this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault(); // Toggle capturing tab key so users can focus away\n\n        this.capture = !this.capture;\n      }\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    var lineNumberWidthCalculator = h('div', {\n      attrs: {\n        \"class\": 'prism-editor__line-width-calc',\n        style: 'height: 0px; visibility: hidden; pointer-events: none;'\n      }\n    }, '999');\n    var lineNumbers = h('div', {\n      staticClass: 'prism-editor__line-numbers',\n      style: {\n        'min-height': this.lineNumbersHeight\n      },\n      attrs: {\n        'aria-hidden': 'true'\n      }\n    }, [lineNumberWidthCalculator, Array.from(Array(this.lineNumbersCount).keys()).map(function (_, index) {\n      return h('div', {\n        attrs: {\n          \"class\": 'prism-editor__line-number token comment'\n        }\n      }, \"\" + ++index);\n    })]);\n    var textarea = h('textarea', {\n      ref: 'textarea',\n      on: {\n        input: this.handleChange,\n        keydown: this.handleKeyDown,\n        click: function click($event) {\n          _this3.$emit('click', $event);\n        },\n        keyup: function keyup($event) {\n          _this3.$emit('keyup', $event);\n        },\n        focus: function focus($event) {\n          _this3.$emit('focus', $event);\n        },\n        blur: function blur($event) {\n          _this3.$emit('blur', $event);\n        }\n      },\n      staticClass: 'prism-editor__textarea',\n      \"class\": {\n        'prism-editor__textarea--empty': this.isEmpty\n      },\n      attrs: {\n        spellCheck: 'false',\n        autocapitalize: 'off',\n        autocomplete: 'off',\n        autocorrect: 'off',\n        'data-gramm': 'false',\n        placeholder: this.placeholder,\n        'data-testid': 'textarea',\n        readonly: this.readonly\n      },\n      domProps: {\n        value: this.codeData\n      }\n    });\n    var preview = h('pre', {\n      ref: 'pre',\n      staticClass: 'prism-editor__editor',\n      attrs: {\n        'data-testid': 'preview'\n      },\n      domProps: {\n        innerHTML: this.content\n      }\n    });\n    var editorContainer = h('div', {\n      staticClass: 'prism-editor__container'\n    }, [textarea, preview]);\n    return h('div', {\n      staticClass: 'prism-editor-wrapper'\n    }, [this.lineNumbers && lineNumbers, editorContainer]);\n  }\n});\n\nexport { PrismEditor };\n//# sourceMappingURL=prismeditor.esm.js.map\n"],"sourceRoot":""}